package com.dreamscale.htmflow.core.feeds.executor.parts.observer;

import com.dreamscale.htmflow.api.circle.CircleMessageType;
import com.dreamscale.htmflow.core.domain.circle.CircleFeedMessageEntity;
import com.dreamscale.htmflow.core.feeds.executor.parts.fetch.flowable.FlowableCircleMessageEvent;
import com.dreamscale.htmflow.core.feeds.story.TileBuilder;
import com.dreamscale.htmflow.core.feeds.story.feature.details.MessageDetails;

import java.util.List;

/**
 * Translates the flame ratings on JournalEntries to TimeBands with a FeelsContext that always fits within
 * the frame and contributes to the push/pull signals generated by all the flames combined
 */
public class CircleMessageEventObserver implements FlowObserver<FlowableCircleMessageEvent> {

    @Override
    public void seeInto(List<FlowableCircleMessageEvent> flowables, TileBuilder tileBuilder) {

        for (FlowableCircleMessageEvent flowable : flowables) {
            CircleFeedMessageEntity circleMessage = (flowable.get());

            CircleMessageType circleMessageType = circleMessage.getMessageType();

            if (isScrapbookEvent(circleMessageType)) {
                tileBuilder.postCircleMessage(circleMessage.getPosition(), createIdeaDeails(circleMessage));
            }

            tileBuilder.finishAfterLoad();

        }

    }

    private MessageDetails createIdeaDeails(CircleFeedMessageEntity circleMessage) {
        MessageDetails messageDetails = new MessageDetails();

        messageDetails.setMessageFromTorchieId(circleMessage.getTorchieId());
        messageDetails.setMessageFromName(circleMessage.getFullName());

        messageDetails.setCircleId(circleMessage.getCircleId());
        messageDetails.setCircleName(circleMessage.getCircleName());

        messageDetails.setMessageId(circleMessage.getId());
        messageDetails.setMessageType(circleMessage.getMessageType());
        messageDetails.setMessage(circleMessage.getMessage());
        messageDetails.setFileName(circleMessage.getFileName());
        messageDetails.setFilePath(circleMessage.getFilePath());
        messageDetails.setSnippetSource(circleMessage.getSnippetSource());
        return messageDetails;
    }

    private boolean isScrapbookEvent(CircleMessageType circleMessageType) {
        return circleMessageType.equals(CircleMessageType.CHAT)
                || circleMessageType.equals(CircleMessageType.SCREENSHOT)
                || circleMessageType.equals(CircleMessageType.SNIPPET);
    }
}
